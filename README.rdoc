= cmon

cmon is an HTML preprocessor that adds powerful layout capabilities to your markup. With cmon, you can engineer solid, cross-browser layouts that in CSS would require hours of writing and debugging browser-specific behaviour.

To use cmon, embed simple tags in your markup. cmon will then compile these to clean, valid HTML.

== Example

cmon understands 3 tags: +cmon+, +baby+ and +yeah+. It also understands 2 attributes: +babyspan+ and +yeahspan+.

    <cmon>
        <baby>
            <yeah yeahspan="3">Header</yeah>
        </baby>

        <baby>
            <yeah>Left column</yeah>
            <yeah>Middle column</yeah>
            <yeah>Right column</yeah>
        </baby>

        <baby>
            <yeah yeahspan="3">Footer</yeah>
        </baby>
    </cmon>

This (very simplistic) example will produce a 3-column layout. With a sprinkling of CSS, this will be ready for production use.

== Features

<tt><cmon></tt>-oriented layout has several interesting features:

All <tt>yeah</tt>s in a <tt>baby</tt> are always the same height. This makes <b>equal-height columnar layouts</b> trivial.

The height of <tt>baby</tt> tags and width of <tt>yeah</tt> tags is automatically calculated depending on the width and height of the <tt>cmon</tt> and the size of the content. This makes it trivial, for example, to <b>arrange an arbitrary number of equally-sized elements horizontally, with even distribution</b>. In CSS, this would necessitate ugly explicit widths (percentages at best; absolute values or extra markup if you were hoping to specify some padding).

Heights and widths of individual <tt>baby</tt>s and <tt>yeah</tt>s can be explicitly specified (in CSS, as either absolute or percentage values). <tt>baby</tt>s and <tt>yeah</tt>s for which a height/width has not been specified will still be sized automatically.

CSS +height+ and +width+ properties for <tt>cmon</tt>, <tt>baby</tt> and <tt>yeah</tt> elements apply to the <b>full height and width of the element, not the content</b>. This is like the proposed <tt>box-sizing: border-box;</tt> declaration in CSS3, except it works now, in all browsers!

Content inside <tt>yeah</tt>s can be trivially vertically-aligned by simply applying <tt>vertical-align: middle;</tt> to the <tt>yeah</tt> element. That's right: <b>vertical alignment that just works, in all browsers</b>.

== Usage

cmon comes with a command-line executable. It can take files specified on the command line or from standard in. The compiled code is provided on standard out.

    cmon index.html
    cmon < index.html

== Installation

    gem sources -a http://gems.github.com/
    sudo gem install aanand-cmon

== Will it work with Rails?

Yes! cmon comes with a drop-in Rack middleware component. Using it should be as simple as:

    require 'cmon/rack'
    use Cmon::Rack

== Can I style cmon tags with CSS?

At the moment, only by giving them classes (e.g. <tt><cmon class="foo"></tt>). However, a CSS processor is feasible.

== Copyright

Copyright (c) 2009 Aanand Prasad. See LICENSE for details.
